import os
import random
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_TOKEN –≤ .env")

# –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
SUPPORT_MESSAGES = [
    "–¢—ã –¥–µ–ª–∞–µ—à—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üíõ",
    "–í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ üåø",
    "–°–∫–æ—Ä–æ –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è ‚ú®",
    "–£ —Ç–µ–±—è —É–∂–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è üí™",
    "–¢—ã –Ω–µ –æ–¥–Ω–∞ ü§ù",
    "–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è üå∏",
    "–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ ‚Äî —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–æ–≥—Ä–µ—Å—Å üö∂",
    "–ü–æ–º–Ω–∏: —Ç—ã –¥–µ–ª–∞–µ—à—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚òÄÔ∏è"
]

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏
async def send_support(chat_id, context: ContextTypes.DEFAULT_TYPE):
    message = random.choice(SUPPORT_MESSAGES)
    await context.bot.send_message(chat_id, message)

# –ï–∂–µ—á–∞—Å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
async def hourly_support(context: ContextTypes.DEFAULT_TYPE):
    chat_ids = context.bot_data.get("chat_ids", set())
    for chat_id in chat_ids:
        await send_support(chat_id, context)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    chat_ids = context.bot_data.get("chat_ids", set())
    chat_ids.add(chat_id)
    context.bot_data["chat_ids"] = chat_ids

    keyboard = [[InlineKeyboardButton("‚ú® –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–µ–π—á–∞—Å", callback_data="support_now")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç üëã –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∞–∂–¥—ã–π —á–∞—Å.\n"
        "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:",
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "support_now":
        await send_support(query.message.chat_id, context)

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button, pattern="support_now"))

    app.job_queue.run_repeating(hourly_support, interval=3600, first=10)

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    app.run_polling()

if __name__ == "__main__":
    main()

